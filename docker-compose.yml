version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ses-postgres
    environment:
      POSTGRES_DB: ses_db
      POSTGRES_USER: ses_user
      POSTGRES_PASSWORD: ses_password
      POSTGRES_MULTIPLE_DATABASES: project_db,engineer_db,matching_db,contract_db,timesheet_db,billing_db,report_db,notification_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - ses-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ses_user -d ses_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ses-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ses-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: ses-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - ses-network

  # Apache Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: ses-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - ses-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Keycloak Authentication
  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    container_name: ses-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak_db
      KC_DB_USERNAME: ses_user
      KC_DB_PASSWORD: ses_password
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    command: start-dev
    volumes:
      - ./docker/keycloak/import:/opt/keycloak/data/import
    networks:
      - ses-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Project Service
  project-service:
    build:
      context: ./services/project-service
      dockerfile: Dockerfile
    container_name: ses-project-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/project_db
      SPRING_DATASOURCE_USERNAME: ses_user
      SPRING_DATASOURCE_PASSWORD: ses_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: ses-manager
      KEYCLOAK_RESOURCE: ses-backend
      KEYCLOAK_CREDENTIALS_SECRET: ses-backend-secret
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - redis
      - kafka
      - keycloak
    networks:
      - ses-network

  # Engineer Service
  engineer-service:
    build:
      context: ./services/engineer-service
      dockerfile: Dockerfile
    container_name: ses-engineer-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/engineer_db
      SPRING_DATASOURCE_USERNAME: ses_user
      SPRING_DATASOURCE_PASSWORD: ses_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: ses-manager
      KEYCLOAK_RESOURCE: ses-backend
      KEYCLOAK_CREDENTIALS_SECRET: ses-backend-secret
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - redis
      - kafka
      - keycloak
    networks:
      - ses-network

  # Matching Service
  matching-service:
    build:
      context: ./services/matching-service
      dockerfile: Dockerfile
    container_name: ses-matching-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/matching_db
      SPRING_DATASOURCE_USERNAME: ses_user
      SPRING_DATASOURCE_PASSWORD: ses_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: ses-manager
      KEYCLOAK_RESOURCE: ses-backend
      KEYCLOAK_CREDENTIALS_SECRET: ses-backend-secret
    ports:
      - "8083:8083"
    depends_on:
      - postgres
      - redis
      - kafka
      - keycloak
    networks:
      - ses-network

  # Contract Service
  contract-service:
    build:
      context: ./services/contract-service
      dockerfile: Dockerfile
    container_name: ses-contract-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/contract_db
      SPRING_DATASOURCE_USERNAME: ses_user
      SPRING_DATASOURCE_PASSWORD: ses_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: ses-manager
      KEYCLOAK_RESOURCE: ses-backend
      KEYCLOAK_CREDENTIALS_SECRET: ses-backend-secret
    ports:
      - "8084:8084"
    depends_on:
      - postgres
      - redis
      - kafka
      - keycloak
    networks:
      - ses-network

  # Timesheet Service
  timesheet-service:
    build:
      context: ./services/timesheet-service
      dockerfile: Dockerfile
    container_name: ses-timesheet-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/timesheet_db
      SPRING_DATASOURCE_USERNAME: ses_user
      SPRING_DATASOURCE_PASSWORD: ses_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: ses-manager
      KEYCLOAK_RESOURCE: ses-backend
      KEYCLOAK_CREDENTIALS_SECRET: ses-backend-secret
    ports:
      - "8085:8085"
    depends_on:
      - postgres
      - redis
      - kafka
      - keycloak
    networks:
      - ses-network

  # Billing Service
  billing-service:
    build:
      context: ./services/billing-service
      dockerfile: Dockerfile
    container_name: ses-billing-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/billing_db
      SPRING_DATASOURCE_USERNAME: ses_user
      SPRING_DATASOURCE_PASSWORD: ses_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: ses-manager
      KEYCLOAK_RESOURCE: ses-backend
      KEYCLOAK_CREDENTIALS_SECRET: ses-backend-secret
    ports:
      - "8086:8086"
    depends_on:
      - postgres
      - redis
      - kafka
      - keycloak
    networks:
      - ses-network

  # Report Service
  report-service:
    build:
      context: ./services/report-service
      dockerfile: Dockerfile
    container_name: ses-report-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/report_db
      SPRING_DATASOURCE_USERNAME: ses_user
      SPRING_DATASOURCE_PASSWORD: ses_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: ses-manager
      KEYCLOAK_RESOURCE: ses-backend
      KEYCLOAK_CREDENTIALS_SECRET: ses-backend-secret
    ports:
      - "8087:8087"
    depends_on:
      - postgres
      - redis
      - kafka
      - keycloak
    networks:
      - ses-network

  # Notification Service
  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    container_name: ses-notification-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/notification_db
      SPRING_DATASOURCE_USERNAME: ses_user
      SPRING_DATASOURCE_PASSWORD: ses_password
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: ses-manager
      KEYCLOAK_RESOURCE: ses-backend
      KEYCLOAK_CREDENTIALS_SECRET: ses-backend-secret
    ports:
      - "8088:8088"
    depends_on:
      - postgres
      - redis
      - kafka
      - keycloak
    networks:
      - ses-network

volumes:
  postgres_data:
  redis_data:
  zookeeper_data:
  zookeeper_logs:
  kafka_data:

networks:
  ses-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16